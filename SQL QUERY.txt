
--> selezionare tutti i dati con righe e colonne

SELECT *
FROM persons;

esempio terminale:

            template1=# SELECT * FROM persons;
            id | first_name | last_name |          email           | gender | date_of_birth |   country_of_birth    
            ----+------------+-----------+--------------------------+--------+---------------+-----------------------
            1 | Fayth      | Orsman    | forsman0@buzzfeed.com    | Female | 2023-02-09    | Morocco
            2 | Ethelin    | Hurran    | ehurran1@ebay.com        | Female | 2023-08-26    | Indonesia
            3 | Mitch      | Flinders  | mflinders2@rediff.com    | Male   | 2023-09-02    | Ireland
            4 | Mikol      | Preshaw   | mpreshaw3@reddit.com     | Male   | 2023-10-29    | Indonesia
            5 | Marianne   | Paolo     | mpaolo4@pinterest.com    | Female | 2023-06-03    | Mali
            6 | Ursulina   | Yushin    | uyushin5@sogou.com       | Female | 2023-03-15    | China
            7 | Euell      | Luciani   | eluciani6@psu.edu        | Male   | 2023-03-15    | Palestinian Territory
            8 | Misti      | Anster    | manster7@studiopress.com | Female | 2023-07-11    | China
            9 | Binni      | Gull      | bgull8@geocities.jp      | Female | 2023-08-31    | Belarus
            10 | Aurie      | Putson    | aputson9@upenn.edu       | Female | 2023-07-04    | Venezuela
            (10 rows)


--> selezionare l'attributo di riferiemento per mostrare la row del attributo selezionato

SELECT first_name
FROM persons;

esempio terminale:  

            template1=# SELECT first_name FROM persons;
            first_name 
            ------------
            Fayth
            Ethelin
            Mitch
            Mikol
            Marianne
            Ursulina
            Euell
            Misti
            Binni
            Aurie
            (10 rows)

--> per ordinare i dati in base al ordine crescente selezionando uno o piu' attributi attraverso keyword ORDER BY


input: 

        template1=# SELECT * FROM persons ORDER BY country_of_birth,secondo-campo ASC; // ordinamento in base alla citta' di nascita



output: 


        id | first_name | last_name |          email           | gender | date_of_birth |   country_of_birth    
        ----+------------+-----------+--------------------------+--------+---------------+-----------------------
        9 | Binni      | Gull      | bgull8@geocities.jp      | Female | 2023-08-31    | Belarus
        8 | Misti      | Anster    | manster7@studiopress.com | Female | 2023-07-11    | China
        6 | Ursulina   | Yushin    | uyushin5@sogou.com       | Female | 2023-03-15    | China
        4 | Mikol      | Preshaw   | mpreshaw3@reddit.com     | Male   | 2023-10-29    | Indonesia
        2 | Ethelin    | Hurran    | ehurran1@ebay.com        | Female | 2023-08-26    | Indonesia
        3 | Mitch      | Flinders  | mflinders2@rediff.com    | Male   | 2023-09-02    | Ireland
        5 | Marianne   | Paolo     | mpaolo4@pinterest.com    | Female | 2023-06-03    | Mali
        1 | Fayth      | Orsman    | forsman0@buzzfeed.com    | Female | 2023-02-09    | Morocco
        7 | Euell      | Luciani   | eluciani6@psu.edu        | Male   | 2023-03-15    | Palestinian Territory
        10 | Aurie      | Putson    | aputson9@upenn.edu       | Female | 2023-07-04    | Venezuela
        (10 rows)



--> per ordinare i dati senza doppioni si utilizza la keyword DISTINCT nome-campo // in questo caso non ci sono due Indonesia o Cina


input: 


        template1=# SELECT DISTINCT country_of_birth FROM persons_ten ORDER BY country_of_birth ASC;




output:    

        country_of_birth    
        -----------------------
        Belarus
        China
        Indonesia
        Ireland
        Mali
        Morocco
        Palestinian Territory
        Venezuela
        (8 rows)


--> per filtrare i dati in base ad una condizione si utilizza la keyword WHERE inoltre e possibile combinare le condizioni
    con i operatori logici AND , OR 


    input:
    
            template1=# SELECT * FROM persons WHERE gender = 'Female' AND country_of_birth = 'China';




    output: 
            id | first_name | last_name |             email              | gender | date_of_birth | country_of_birth 
            ----+------------+-----------+--------------------------------+--------+---------------+------------------
            8 | Lira       | Isham     | lisham7@cmu.edu                | Female | 2023-03-07    | China
            45 | Robena     | Snowsill  | rsnowsill18@shop-pro.jp        | Female | 2023-09-22    | China
            66 | Henrietta  | Frogley   | hfrogley1t@cdbaby.com          | Female | 2023-08-12    | China
            67 | Dedra      | Bucky     | dbucky1u@posterous.com         | Female | 2023-06-01    | China
            71 | Kristin    | McGrudder | kmcgrudder1y@noaa.gov          | Female | 2023-12-12    | China
            82 | Queenie    | Pace      | qpace29@scientificamerican.com | Female | 2023-12-28    | China
            93 | Cherianne  | Isaq      | cisaq2k@fastcompany.com        | Female | 2023-06-06    | China
            (7 rows)

--> esempio di OR

input: template1=# SELECT * FROM persons WHERE country_of_birth = 'Indonesia' OR country_of_birth = 'Brazil';


output:
        id  | first_name | last_name  |            email             | gender | date_of_birth | country_of_birth 
        -----+------------+------------+------------------------------+--------+---------------+------------------
        2 | Sherrie    | Colclough  | scolclough1@upenn.edu        | Female | 2023-11-20    | Indonesia
        9 | Adolpho    | Houchen    | ahouchen8@soundcloud.com     | Male   | 2023-09-03    | Indonesia
        12 | Hashim     | Gilchriest | hgilchriestb@nasa.gov        | Male   | 2023-02-05    | Brazil
        19 | Nathanael  | Trevino    | ntrevinoi@clickbank.net      | Male   | 2023-11-14    | Indonesia
        20 | Valdemar   | Bowling    | vbowlingj@yahoo.com          | Male   | 2023-09-25    | Brazil
        28 | Cory       | Geddes     | cgeddesr@com.com             | Female | 2023-11-14    | Indonesia
        31 | Petey      | Purdy      | ppurdyu@bloomberg.com        | Male   | 2023-01-08    | Indonesia
        41 | Lowell     | Dipple     | ldipple14@rambler.ru         | Male   | 2023-03-19    | Indonesia
        47 | Tanney     | Blades     | tblades1a@samsung.com        | Male   | 2023-05-23    | Indonesia
        50 | Tab        | Tinan      | ttinan1d@wikipedia.org       | Male   | 2023-07-10    | Indonesia
        59 | Philomena  | Kayser     | pkayser1m@miibeian.gov.cn    | Female | 2023-04-17    | Indonesia
        64 | Katine     | Clair      | kclair1r@theglobeandmail.com | Female | 2023-11-25    | Indonesia
        70 | Jackson    | Lampke     | jlampke1x@yellowpages.com    | Male   | 2023-04-07    | Indonesia
        86 | Matthus    | Quogan     | mquogan2d@prweb.com          | Male   | 2023-01-24    | Indonesia
        96 | Eddie      | Debney     | edebney2n@technorati.com     | Male   | 2023-04-25    | Indonesia
        97 | Dev        | Tefft      | dtefft2o@fema.gov            | Male   | 2023-12-19    | Brazil
        98 | Deirdre    | Davydoch   | ddavydoch2p@cbsnews.com      | Female | 2023-10-13    | Indonesia
        100 | Georgiana  | Minmagh    | gminmagh2r@princeton.edu     | Female | 2023-08-12    | Indonesia
        (18 rows)
